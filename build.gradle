/*
 * Copyright 2016 Yusuke Ikeda
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
  ext {
    javaVersion = JavaVersion.VERSION_1_8
    springBootVersion = '1.3.5.RELEASE'
  }
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    classpath 'org.flywaydb:flyway-gradle-plugin:3.2.1'
  }
}

// TODO will be changes to plugins block notation below.
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'org.flywaydb.flyway'

description = 'Root project of daguerreo.'
targetCompatibility = sourceCompatibility = javaVersion
tasks.withType(AbstractCompile)*.options*.encoding = 'UTF-8'

sourceSets {
  generated {
    compileClasspath += configurations.compile
  }
  // TODO runtimeClasspath is also necessary?
  main.compileClasspath += generated.output
  test.compileClasspath += generated.output
}

repositories {
  mavenCentral()
}

dependencies {
  compile 'org.springframework.boot:spring-boot-devtools'
  compile 'org.springframework.boot:spring-boot-starter-jooq'
  compileOnly 'org.projectlombok:lombok:1.16.6'
  compile 'org.springframework.boot:spring-boot-starter-web'
  runtime 'com.h2database:h2'
  runtime 'org.flywaydb:flyway-core'
  testCompile 'org.springframework.boot:spring-boot-starter-test'
}

jar {
  baseName = 'daguerreo'
  version = '0.0.1-SNAPSHOT'
}

idea {
  project {
    // See: https://docs.gradle.org/current/dsl/org.gradle.plugins.ide.idea.model.IdeaProject.html
    jdkName = javaVersion
    languageLevel = javaVersion
    vcs = 'Git'
  }
  module {
    // See: https://docs.gradle.org/current/dsl/org.gradle.plugins.ide.idea.model.IdeaModule.html
    generatedSourceDirs += sourceSets.generated.java.srcDirs
    downloadJavadoc = true
    downloadSources = true
  }
}

eclipse {
  classpath {
    containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
    containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    downloadJavadoc = true
    downloadSources = true
  }
}

flyway {
  url = 'jdbc:h2:file:/tmp/daguerreo'
  user = 'sa'
}
